import csv
import re

log_file_path = "/var/ossec/logs/alerts/alerts.log"
output_csv_path = "/shared/logs/snort_alerts.csv"

snort_pattern = re.compile(r'snort\[\d+\]', re.IGNORECASE)

# Function that reads the logs generated by snort and generates a csv file containing them
def parse_snort_log(block):
    try:
        timestamp_match = re.search(r'(\d{4} \w{3} \d{2} \d{2}:\d{2}:\d{2})', block)
        timestamp = timestamp_match.group(1) if timestamp_match else "Unknown"

        rule_id_match = re.search(r'\[(\d+:\d+:\d+)\]', block)
        rule_id = rule_id_match.group(1) if rule_id_match else "Unknown"

        description_match = re.search(r'"(.*?)"', block)
        description = description_match.group(1) if description_match else "Unknown"

        classification_match = re.search(r'\[Classification: (.*?)\]', block)
        classification = classification_match.group(1) if classification_match else "Unknown"

        priority_match = re.search(r'\[Priority: (\d+)\]', block)
        priority = priority_match.group(1) if priority_match else "Unknown"

        protocol_match = re.search(r'\{(.*?)\}', block)
        protocol = protocol_match.group(1) if protocol_match else "Unknown"

        src_ip_match = re.search(r'([\d\.]+[:\d+]*) ->', block)
        src_ip = src_ip_match.group(1) if src_ip_match else "Unknown"

        dst_ip_match = re.search(r'-> ([\d\.]+[:\d+]*)', block)
        dst_ip = dst_ip_match.group(1) if dst_ip_match else "Unknown"

        return [timestamp, src_ip, dst_ip, protocol, rule_id, priority, description, classification]
        
    except Exception as e:
        return ["Error", "Error", "Error", "Error", "Error", "Error", "Error", "Error"]

if __name__ == '__main__':
    print("Exporting...")
    try:
        with open(log_file_path, 'r') as log_file, open(output_csv_path, 'w', newline='') as csv_file:
            csv_writer = csv.writer(csv_file)
            csv_writer.writerow(["Timestamp", "Source IP", "Dest IP", "Protocol", "Rule ID", "Priority", "Description", "Classification"])

            current_block = ""
            for line in log_file:
                if line.strip() == "": 
                    if current_block and snort_pattern.search(current_block):
                        parsed_data = parse_snort_log(current_block)
                        csv_writer.writerow(parsed_data)
                    current_block = ""
                else:
                    current_block += line

            if current_block and snort_pattern.search(current_block):
                parsed_data = parse_snort_log(current_block)
                csv_writer.writerow(parsed_data)
        print(f"Snort's logs exported in {output_csv_path}")
        
    except:
        print("Something went wrong...")
